---
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';
import 'swiper/css/effect-fade';

// Estilos específicos para Swiper
const swiperStyles = {
  banner: 'relative h-[100vh] before:content-[""] before:absolute before:inset-0 before:bg-gradient-to-t before:from-[#141414] before:to-transparent before:z-10',
  title: 'text-[2.5vw] font-bold text-white drop-shadow-lg',
  description: 'text-[1.4vw] text-white/90 max-w-[50%] drop-shadow',
  categoryTitle: 'text-[1.4vw] font-bold text-[#e5e5e5] ml-[4%] mb-4',
  carousel: 'mb-[3vw] relative group',
  slide: 'transition-transform duration-300 hover:scale-105 hover:z-10',
  navigationButton: 'absolute top-0 h-full w-20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 z-10',
  navigationPrev: 'left-0 bg-gradient-to-r from-[#141414]/70 to-transparent',
  navigationNext: 'right-0 bg-gradient-to-l from-[#141414]/70 to-transparent'
};

interface Project {
  featured?: boolean;
  type?: string;
  image?: string;
  title?: string;
  description?: string;
  front?: string;
  front2?: string;
  back?: string;
}

const { items = [] } = Astro.props;

// Categorizar proyectos
const featuredProjects = items.filter((item: Project) => item.featured || item.type === 'web app').slice(0, 1);
const webApps = items.filter((item: Project) => item.type === 'web app');
const apis = items.filter((item: Project) => item.type === 'api');
const landingPages = items.filter((item: Project) => item.type === 'landing page');

// Función para obtener el color del badge según la tecnología
const getTechColor = (tech: string): string => {
  const colors: Record<string, string> = {
    'Laravel': 'bg-red-500',
    'Vue.js': 'bg-green-500',
    'php': 'bg-blue-500',
    'default': 'bg-gray-500'
  };
  return colors[tech] || colors.default;
};
---

<!-- Banner Principal estilo Netflix -->
<div class={swiperStyles.banner}>
  <div class="absolute inset-0">
    <img 
      src={featuredProjects[0]?.image} 
      alt={featuredProjects[0]?.title}
      class="w-full h-full object-cover animate-[fadeIn_1s_ease-in]"
      loading="eager"
    />
  </div>
  <div class="absolute inset-0 flex items-end md:items-center justify-start p-8 z-20 min-h-full">
    <div class="absolute bottom-0 left-0 mx-auto ml-[4%] w-[50%] max-w-[800px] md:w-[50%] w-full md:ml-[4%] mb-12 md:mb-0 z-20 pb-8">
      <h1 class={swiperStyles.title + " mb-4 animate-[slideUp_0.8s_ease-out]"}>{featuredProjects[0]?.title}</h1>
      <p class={swiperStyles.description + " mb-6 animate-[slideUp_0.8s_ease-out_0.2s]"}>{featuredProjects[0]?.description}</p>
      <div class="flex gap-4 mb-6">
        <button 
          class="flex items-center gap-2 px-8 py-3 bg-white text-black rounded hover:bg-white/90 transition-colors font-semibold"
          onclick={`showProjectDetails(${JSON.stringify(featuredProjects[0])})`}
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Ver Detalles
        </button>
        <button 
          class="flex items-center gap-2 px-8 py-3 bg-gray-600/70 text-white rounded hover:bg-gray-600/90 transition-colors"
          onclick="alert('Más información')"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Más Info
        </button>
      </div>
      <div class="flex gap-2">
        {featuredProjects[0]?.front && (
          <span class="px-2 py-1 text-sm text-white/90">{featuredProjects[0].front}</span>
        )}
        {featuredProjects[0]?.back && (
          <span class="px-2 py-1 text-sm text-white/90">&bull; {featuredProjects[0].back}</span>
        )}
      </div>
    </div>
  </div>
</div>

<!-- Carruseles estilo Netflix -->
<div class="bg-[#141414] min-h-screen pb-20">
  <!-- Web Apps -->
  <section class={swiperStyles.carousel}>
    <h2 class={swiperStyles.categoryTitle}>Aplicaciones Web</h2>
    <div class="webAppsSwiper swiper">
      <div class="swiper-wrapper">
        {webApps.map((project) => (
          <div class={"swiper-slide px-2 " + swiperStyles.slide}>
            <div class="relative group cursor-pointer"
                 onclick={`showProjectDetails(${JSON.stringify(project)})`}>
              <img 
                src={project.image} 
                alt={project.title} 
                class="w-full aspect-video object-cover rounded"
              />
              <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity flex flex-col items-center justify-end p-4">
                <h3 class="text-white text-lg font-semibold text-center mb-2">{project.title}</h3>
                <p class="text-white/80 text-sm text-center">{project.description}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
      <div class={"swiper-button-prev " + swiperStyles.navigationButton + " " + swiperStyles.navigationPrev}></div>
      <div class={"swiper-button-next " + swiperStyles.navigationButton + " " + swiperStyles.navigationNext}></div>
    </div>
  </section>

<!-- APIs -->
  <!-- <section class={swiperStyles.carousel}>
    <h2 class={swiperStyles.categoryTitle}>APIs y Servicios</h2>
    <div class="apisSwiper swiper">
      <div class="swiper-wrapper">
        {apis.map((project) => (
          <div class={"swiper-slide px-2 " + swiperStyles.slide}>
            <div class="relative group cursor-pointer"
                 onclick={`showProjectDetails(${JSON.stringify(project)})`}>
              <img 
                src={project.image} 
                alt={project.title} 
                class="w-full aspect-video object-cover rounded"
              />
              <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center">
                <h3 class="text-white text-lg font-semibold text-center p-4">{project.title}</h3>
              </div>
            </div>
          </div>
        ))}
      </div>
      <div class={"swiper-button-prev " + swiperStyles.navigationButton + " " + swiperStyles.navigationPrev}></div>
      <div class={"swiper-button-next " + swiperStyles.navigationButton + " " + swiperStyles.navigationNext}></div>
    </div>
  </section> -->

  <!-- Landing Pages -->
  <!-- <section class={swiperStyles.carousel}>
    <h2 class={swiperStyles.categoryTitle}>Landing Pages</h2>
    <div class="landingSwiper swiper">
      <div class="swiper-wrapper">
        {landingPages.map((project) => (
          <div class={"swiper-slide px-2 " + swiperStyles.slide}>
            <div class="relative group cursor-pointer"
                 onclick={`showProjectDetails(${JSON.stringify(project)})`}>
              <img 
                src={project.image} 
                alt={project.title} 
                class="w-full aspect-video object-cover rounded"
              />
              <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center">
                <h3 class="text-white text-lg font-semibold text-center p-4">{project.title}</h3>
              </div>
            </div>
          </div>
        ))}
      </div>
      <div class={"swiper-button-prev " + swiperStyles.navigationButton + " " + swiperStyles.navigationPrev}></div>
      <div class={"swiper-button-next " + swiperStyles.navigationButton + " " + swiperStyles.navigationNext}></div>
    </div>
  </section> -->
</div>

<!-- Modal estilo Netflix -->
<div id="projectModal" class="fixed inset-0 bg-black/90 flex items-center justify-center p-4 hidden z-50">
  <div class="bg-[#181818] rounded-lg w-[850px] max-h-[90vh] overflow-y-auto">
    <div class="relative">
      <button 
        onclick="document.getElementById('projectModal').classList.add('hidden')"
        class="absolute top-4 right-4 text-white/60 hover:text-white z-10"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      <div id="modalContent">
        <!-- El contenido del modal se llenará dinámicamente -->
      </div>
    </div>
  </div>
</div>

<script>
  import Swiper from 'swiper';
  import { Navigation, Pagination, EffectFade } from 'swiper/modules';

  interface Project {
    featured?: boolean;
    type?: string;
    image?: string;
    title?: string;
    description?: string;
    front?: string;
    front2?: string;
    back?: string;
  }

  declare global {
    interface Window {
      showProjectDetails: (project: Project) => void;
    }
  }

  const swiperOptions = {
    modules: [Navigation, Pagination],
    slidesPerView: 6,
    spaceBetween: 8,
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
    breakpoints: {
      320: {
        slidesPerView: 2,
        spaceBetween: 8
      },
      640: {
        slidesPerView: 3,
        spaceBetween: 8
      },
      768: {
        slidesPerView: 4,
        spaceBetween: 8
      },
      1024: {
        slidesPerView: 5,
        spaceBetween: 8
      },
      1536: {
        slidesPerView: 6,
        spaceBetween: 8
      }
    }
  };

  document.addEventListener('astro:page-load', () => {
    new Swiper('.webAppsSwiper', swiperOptions);
    new Swiper('.apisSwiper', swiperOptions);
    new Swiper('.landingSwiper', swiperOptions);

    // Agregar listener para cerrar modal con ESC
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        document.getElementById('projectModal')?.classList.add('hidden');
      }
    });
  });

  // Modal functionality actualizada estilo Netflix
  window.showProjectDetails = (project) => {
    const modal = document.getElementById('projectModal');
    const content = document.getElementById('modalContent');
    
    if (modal && content) {
      content.innerHTML = `
        <div class="relative">
          <div class="aspect-video w-full">
            <img src="${project.image}" alt="${project.title}" class="w-full h-full object-cover">
            <div class="absolute inset-0 bg-gradient-to-b from-transparent via-black/50 to-[#181818]"></div>
          </div>
          
          <div class="absolute bottom-0 left-0 p-8 w-full">
            <h2 class="text-4xl font-bold text-white mb-4">${project.title}</h2>
            
            <div class="flex items-center gap-4 mb-4">
              <button class="flex items-center gap-2 px-8 py-3 bg-white text-black rounded-md hover:bg-white/90 font-semibold">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                </svg>
                Ver Proyecto
              </button>
              <button class="flex items-center justify-center w-12 h-12 rounded-full border-2 border-white/20 hover:border-white text-white">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                </svg>
              </button>
            </div>

            <div class="flex gap-4 text-sm text-white mb-4">
              ${project.front ? `<span class="font-medium">${project.front}</span>` : ''}
              ${project.back ? `<span class="text-white/50">&bull;</span><span class="font-medium">${project.back}</span>` : ''}
            </div>

            <p class="text-lg text-white/90 max-w-3xl">${project.description}</p>
          </div>
        </div>

        <div class="p-8 bg-[#181818]">
          <h3 class="text-2xl font-medium text-white mb-4">Acerca del proyecto</h3>
          <p class="text-lg text-white/70">${project.description}</p>
        </div>
      `;
      
      modal.classList.remove('hidden');
    }
  };
</script>