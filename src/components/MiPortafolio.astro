---
import ModalCustom from "./react/ModalCustom";



interface Project {
  featured?: boolean;
  type?: string;
  image?: string;
  title?: string;
  description?: string;
  front?: string;
  front2?: string;
  back?: string;
}

const { items = [] } = Astro.props;

// Categorizar proyectos
const featuredProjects = items.filter((item: Project) => item.featured || item.type === 'web app').slice(0, 1);
const webApps = items.filter((item: Project) => item.type === 'web app');
const apis = items.filter((item: Project) => item.type === 'api');
const landingPages = items.filter((item: Project) => item.type === 'landing page');

// Función para obtener el color del badge según la tecnología
const getTechColor = (tech: string): string => {
  const colors: Record<string, string> = {
    'Laravel': 'bg-red-500',
    'Vue.js': 'bg-green-500',
    'php': 'bg-blue-500',
    'default': 'bg-gray-500'
  };
  return colors[tech] || colors.default;
};
---

<!-- Banner Principal estilo Netflix -->
<div class="relative h-screen before:content-[''] before:absolute before:inset-0 before:bg-gradient-to-t before:from-[#141414] before:to-transparent before:z-10">
  <div class="absolute inset-0">
    <img 
      src={featuredProjects[0]?.image} 
      alt={featuredProjects[0]?.title}
      class="w-full h-full object-cover animate-[fadeIn_1s_ease-in]"
      loading="eager"
    />
  </div>
  <div class="absolute inset-0 flex items-end md:items-center justify-start p-8 z-20 min-h-full">
    <div class="absolute bottom-0 left-0 mx-auto ml-[4%] w-[50%] max-w-[800px] md:w-[50%] w-full md:ml-[4%] mb-12 md:mb-0 z-20 pb-8">
      <h1 class="text-[2.5vw] font-bold text-white drop-shadow-lg mb-4 animate-[slideUp_0.8s_ease-out]">{featuredProjects[0]?.title}</h1>
      <p class="text-[1.4vw] text-white/90 max-w-[50%] drop-shadow mb-6 animate-[slideUp_0.8s_ease-out_0.2s]">{featuredProjects[0]?.description}</p>
      <div class="flex gap-4 mb-6">
        {featuredProjects[0] && (
          <ModalCustom client:load project={featuredProjects[0]}>
            <button 
              class="flex items-center gap-2 px-8 py-3 bg-white text-black rounded hover:bg-white/90 transition-colors font-semibold"
              type="button"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              Ver Detalles
            </button>
          </ModalCustom>
        )}
        <button 
          class="flex items-center gap-2 px-8 py-3 bg-gray-600/70 text-white rounded hover:bg-gray-600/90 transition-colors"
          onclick="alert('Más información')"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Más Info
        </button>
      </div>
      <div class="flex gap-2">
        {featuredProjects[0]?.front && (
          <span class="px-2 py-1 text-sm text-white/90">{featuredProjects[0].front}</span>
        )}
        {featuredProjects[0]?.back && (
          <span class="px-2 py-1 text-sm text-white/90">&bull; {featuredProjects[0].back}</span>
        )}
      </div>
    </div>
  </div>
</div>



